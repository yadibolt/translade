<?php

use Drupal\Component\Utility\Html;
use Drupal\Core\Form\FormStateInterface;

/**
 * @param $form
 * @param FormStateInterface $form_state
 * @param $form_id
 * @return void
 */
function translade_form_alter(&$form, FormStateInterface $form_state, $form_id): void {
    $weight = 0;
    $config = \Drupal::config('translade.settings');
    $content_types = $config->get('content_types') ?: [];

    $form_shorthand_type = "node_";
    if (str_contains($form_id, 'commerce_product')) $form_shorthand_type = "commerce_product_";

    foreach ($content_types as $content_type) {
        if ($form_id == $form_shorthand_type . $content_type . '_edit_form') {
            $form['#attached']['library'][] = 'translade/transladejs';
            $form['#attached']['library'][] = 'translade/transladecss';

            $form['translade_shadow_root_mount'] = [
                '#type' => 'markup',
                '#markup' => '<div id="translade-mount-shadow-root"></div>',
                '#weight' => -100,
            ];

            $current_language_id = \Drupal::languageManager()->getCurrentLanguage()->getId();
            if (!$current_language_id) {
              $current_language_id = \Drupal::languageManager()->getDefaultLanguage()->getId();
            }

            // add shadow DOM element for config
            $form['translade_shadow_root_config'] = [
                '#type' => 'textarea',
                '#attributes' => [
                    'id' => ['translade-shadow-root-config'],
                ],
                '#value' => json_encode([
                    'languages' => $config->get('languages') ?: [],
                    'content_language' => $current_language_id,
                    'form_id' => $form_id,
                ]),
                '#weight' => $weight++,
            ];

            $form_entity = $form_state->getFormObject()->getEntity();
            $definitions = $form_entity->getFieldDefinitions();

            foreach ($definitions as $field_name => $def) {
                $field_type = $def->getType();
                if (in_array($field_type, get_supported_field_types())) {
                    // change class for js rendering
                    $uid = Html::getClass($field_name . '-' . $form_entity->id() . '-' . time());
                    $form[$field_name]['#attributes']['class'][] = 'translade-field-' . $uid . ' translade-type-' . $field_type;
                    $form[$field_name]['translade_shadow_root'] = [
                        '#type' => 'markup',
                        '#markup' => '<div id=translade-shadow-root-'.$uid.'></div>',
                    ];
                }
            }
        }
    }
}

/**
 * @return string[]
 */
function get_supported_field_types(): array {
    // supported types
    return [
        'string',
        'string_long',
        'text',
        'text_long',
        'text_with_summary',
    ];
}
